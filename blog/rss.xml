<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Kunai Blog</title>
        <link>https://kunai.rocks/blog</link>
        <description>Kunai Blog</description>
        <lastBuildDate>Wed, 02 Oct 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Enhancing Detection Engineering with Automated Malware Sandboxing]]></title>
            <link>https://kunai.rocks/blog/2024/10/02/kunai-malware-sandboxing</link>
            <guid>https://kunai.rocks/blog/2024/10/02/kunai-malware-sandboxing</guid>
            <pubDate>Wed, 02 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[In the complex field of incident response, effective training for Security Operations Center (SOC) operators is critical. One of the key challenges in SOC training is providing realistic, data-driven environments that accurately simulate the threats and incidents operators will face. Additionally, detection engineers need reliable and actionable data to create robust detection rules that align with real-world security monitoring systems. However, gathering and analyzing real-world malware samples, which is essential to this process, can be time-consuming and prone to errors when done manually.]]></description>
            <content:encoded><![CDATA[<p>In the complex field of incident response, effective training for Security Operations Center (SOC) operators is critical. One of the key challenges in SOC training is providing realistic, data-driven environments that accurately simulate the threats and incidents operators will face. Additionally, detection engineers need reliable and actionable data to create robust detection rules that align with real-world security monitoring systems. However, gathering and analyzing real-world malware samples, which is essential to this process, can be time-consuming and prone to errors when done manually.</p><p>In this blog post, we introduce an approach to solving these challenges through automation. We explore how a Kunai-based sandbox can streamline the collection and analysis of malware samples, offering a practical solution.</p><p>By leveraging this sandbox infrastructure, the project opens up new opportunities for more efficient malware analysis while supporting a wide range of CPU architectures, including those specific to IoT and mobile devices.</p><h1>The Need for Realistic Data</h1><p>One prerequisite for offering cyber ranges or training solutions in the context of detection engineering and security monitoring is the collection of real-world malware samples. </p><p>To provide high-quality training and realistic experiences, these samples can be used as injects in various training scenarios or for testing detection rules.</p><p>A common approach is to collect such data manually by running and monitoring malware samples, preferably in a confined environment such as a virtual machine (VM). However, this approach has several drawbacks: it lacks reproducibility under identical experimental conditions and involves repetitive, error-prone tasks (uploading files, running monitoring tools/malware samples, monitoring network traffic, conducting post-analysis, etc.). </p><p>Thus, this process is an ideal candidate for automation. Our first motivation for creating this new project is to address these challenges. Our second goal is to provide detection engineers with a reliable way to generate <strong>actionable data</strong> from malware samples.</p><h1>The Concept of a Kunai-Based Sandbox</h1><p>Malware sample sandboxing is a frequent task performed at various stages of a security alert's lifecycle, from incident/malware triage to more detailed malware analysis. This task is typically supported by numerous tools, ranging from open-source options like <a href="https://github.com/kevoreilly/CAPEv2/" target="_blank" rel="noopener noreferrer">Cape Sandbox</a> to paid alternatives like <a href="https://www.joesandbox.com/#windows" target="_blank" rel="noopener noreferrer">Joe Sandbox</a>, <a href="https://www.vmray.com/" target="_blank" rel="noopener noreferrer">VMRay</a>, or <a href="https://any.run/" target="_blank" rel="noopener noreferrer">Any Run</a>.</p><p>While these solutions are excellent in many respects—such as defeating anti-sandboxing techniques and providing deep insight into a sample's capabilities—we believe they are not always the best tools for gathering actionable information for detection engineers. For many organizations, there is no direct mapping between the data collected from malware analysis platforms (sandboxes) and their monitoring systems. As a result, a task that should be simple—building detection rules tailored to an organization’s security monitoring tools—can become challenging.</p><p>To solve this issue, we propose a simple yet powerful sandboxing infrastructure based on <a href="https://www.qemu.org/" target="_blank" rel="noopener noreferrer">QEMU</a> for virtualization and <a href="https://github.com/kunai-project/kunai" target="_blank" rel="noopener noreferrer">Kunai</a> for sample monitoring. This infrastructure can serve multiple purposes: analyzing malware samples using the same tools employed for detection and collecting data for use within the NGSOTI project.</p><p><img loading="lazy" src="/assets/images/sandbox-diagram-406745f357919f0e3820fcbbf1305e0b.png" width="850" height="463" class="img_ev3q"></p><h1>Project Status</h1><p>The source code for the project is available in the <a href="https://github.com/kunai-project/sandbox/" target="_blank" rel="noopener noreferrer">Kunai sandbox repository</a>. Additionally, our under-construction open dataset, extracted using this sandbox, can be found at <a href="https://helga.circl.lu/NGSOTI/malware-dataset" target="_blank" rel="noopener noreferrer">NGSOTI malware dataset</a>.</p><p>Currently, the sandboxing system can run Linux malware samples within a virtual environment, monitor them using <a href="https://github.com/kunai-project/kunai" target="_blank" rel="noopener noreferrer">Kunai</a>, and capture the network traffic generated by the system. Another key feature of our sandbox is its support for multiple CPU architectures (currently <strong>Intel 32/64bits</strong> and <strong>ARM 64bits</strong>), enabling the analysis of a broader range of malware samples. We believe <strong>ARM</strong> achitecture support is crucial, as it can be used to analyze malware samples specific to <strong>IoT</strong> or <strong>mobile</strong> (phones, tablets, etc.) devices.</p><h1>Limitations</h1><p>While our approach provides a great opportunity for detection engineers to obtain data that is directly usable for creating <a href="https://github.com/kunai-project/kunai" target="_blank" rel="noopener noreferrer">Kunai-based</a> detection rules, we must remember that it does not achieve the same level of stealthiness as other sandboxing platforms, which often rely on custom hypervisors. Therefore, our approach should not be considered a replacement for dedicated sandboxing platforms but rather a complement that facilitates detection engineering-related tasks.</p><h1>Conclusion</h1><p>The NGSOTI project aims to bridge the gap between theoretical knowledge and practical skills for SOC operators by offering realistic, data-driven training experiences. By automating the collection and analysis of malware samples through the Kunai-based sandbox, we provide a straightforward, efficient, and repeatable method for detection engineers to generate actionable insights. This approach is not intended to replace traditional sandboxing but rather to complement it. With support for multiple CPU architectures, including those specific to IoT and mobile devices, the sandbox expands the possibilities for analyzing and generating data from a wider range of malware, enhancing the diversity of scenarios that NGSOTI can offer. As the project progresses, we look forward to further enriching the open dataset and continuing to develop solutions that address the evolving challenges in detection engineering.</p><h1>References</h1><ul><li><a href="https://github.com/kunai-project/sandbox" target="_blank" rel="noopener noreferrer">Kunai project - sandbox</a></li><li><a href="https://helga.circl.lu/NGSOTI/malware-dataset" target="_blank" rel="noopener noreferrer">NGSOTI - malware-dataset</a></li></ul><h1>Funding</h1><p>The NGSOTI project is dedicated to training the next generation of Security Operation Center (SOC) operators, focusing on the human aspect of cybersecurity. It underscores the significance of providing SOC operators with the necessary skills and open-source tools to address challenges such as detection engineering, incident response, and threat intelligence analysis. Involving key partners such as CIRCL, Restena, Tenzir, and the University of Luxembourg, the project aims to establish a real operational infrastructure for practical training. This initiative integrates academic curricula with industry insights, offering hands-on experience in cyber ranges.</p><p>NGSOTI is co-funded under Digital Europe Programme (DEP) via the ECCC (European cybersecurity competence network and competence centre).</p>]]></content:encoded>
            <category>detection-engineering</category>
            <category>malware</category>
            <category>sandbox</category>
        </item>
        <item>
            <title><![CDATA[Using your MISP IoC in Kunai]]></title>
            <link>https://kunai.rocks/blog/2024/04/19/kunai-misp</link>
            <guid>https://kunai.rocks/blog/2024/04/19/kunai-misp</guid>
            <pubDate>Fri, 19 Apr 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[MISP is an open-source cyber-threat information sharing platform which has been adopted by many actors of the industry over the last years. Organizations usually use it to exchange information about their own IT security incidents or about their Cyber Threat Intelligence (CTI) activities. Therefore a MISP instance, well connected with other instances, can quickly become a real gold mine containing a massive amount of Indicators of Compromise (IoC). By essence IoC are very specific and can be used to quickly identify compromised systems. In this blog post we are going to detail how to easily use IoC stored in a MISP instance to configure Kunai for real time compromise detection.]]></description>
            <content:encoded><![CDATA[<p><a href="https://www.misp-project.org" target="_blank" rel="noopener noreferrer">MISP</a> is an <strong>open-source</strong> cyber-threat information sharing platform which has been adopted by many actors of the industry over the last years. Organizations usually use it to exchange information about their own IT&nbsp;security incidents or about their Cyber Threat Intelligence (CTI) activities. Therefore a <strong>MISP</strong> instance, well connected with other instances, can quickly become a real gold mine containing a massive amount of <strong>Indicators of Compromise (IoC)</strong>. By essence <strong>IoC</strong> are very specific and can be used to quickly identify compromised systems. In this blog post we are going to detail how to easily use <strong>IoC</strong> stored in a <strong>MISP</strong> instance to configure <strong>Kunai</strong> for real time compromise detection.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="warm-up">Warm up<a href="#warm-up" class="hash-link" aria-label="Direct link to Warm up" title="Direct link to Warm up">​</a></h2><p>The first step to do  is to get familiar with the kind of events <strong>Kunai</strong> is able to monitor on your system. So please, take a quick read over the <a href="/docs/category/kunai---events">events documentation</a>, in order to better understand the following steps. Additionally, the reader may want to get familiar with the documentation explaining how to use the tool for <a href="/docs/advanced/">threat detection purposes</a>.</p><p>For those not having the time to go through the whole documentation, nothing beats a good example. So below one can find the example of an <code>execve_script</code> event generated <strong>for every</strong> script being executed on a system running <strong>Kunai</strong>.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"data"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"ancestors"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/usr/lib/systemd/systemd|/usr/bin/login|/usr/bin/zsh|/usr/bin/bash|/usr/bin/xinit|/usr/bin/i3|/usr/bin/bash|/usr/bin/urxvt|/usr/bin/zsh|/usr/bin/bash"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"parent_exe"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/usr/bin/bash"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"command_line"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/bin/bash /tmp/tmp.msdKnvj7ax_kunai_test.sh"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"exe"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"file"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/tmp/tmp.msdKnvj7ax_kunai_test.sh"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"md5"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"64b8185d28042ea96feb251e12fe632b"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha1"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"31683c67b020d90f02a42e43e7758184ef98c12f"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha256"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"cda81b42b75647daf6b70a626380c199fe665d721e63bfe34c96b65da0289627"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha512"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"63165b902db5242a01296b39c1d6f2995fde961e29d9470d1862ccde8e2c8a3083659bf5d9c0794bbca620f37c419baec3c1d1941333d37fb9ced795553d2e83"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"size"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">21</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"interpreter"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"file"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/usr/bin/bash"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"md5"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"e742da46d05de5afca58a2abcba5343e"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha1"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"8d48bdcb10eb85a0bd80c34e13fc01c2f6776043"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha256"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"664428e8dd065099a20cb364bdc293dd8f787ef10b9454b64e127a197950a5d6"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha512"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"b4e6f555571636f02704271d3a40b8470d04447ca3aaad073818f4041d944533bfbca0d5586dc945a2de8033f8fd4123f4203219e9c7b97ebbc52acd340e598f"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"size"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1112880</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"info"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"host"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"..."</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"event"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"kunai"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"id"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">2</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"name"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"execve_script"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"uuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"520487fc-020c-5569-ed88-38393e49a2d2"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"batch"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"task"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"..."</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"parent_task"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"..."</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"utc_time"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"2024-02-13T08:34:29.312127521Z"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As you can see, every <strong>Kunai</strong> event is composed of fields of various types. Some of these types can directly be matched against <strong>IoCs</strong>, following this correspondence table:</p><table><thead><tr><th align="center">Kunai data types</th><th align="center">cover IoC type</th></tr></thead><tbody><tr><td align="center">path</td><td align="center">absolute path</td></tr><tr><td align="center">md5, sha1, sha256, sha512</td><td align="center">hash</td></tr><tr><td align="center">domain / fqdn</td><td align="center">domain / fqdn</td></tr><tr><td align="center">IP address</td><td align="center">IPv4 / IPv6</td></tr></tbody></table><p>So any field of <strong>any Kunai event</strong> having a type in the above table will be checked against the <strong>IoCs</strong> loaded in the tool. Now the only thing we have to do is to feed <strong>Kunai</strong> with data in the expected <strong>IoC</strong> format. The format is pretty basic, yet flexible - the tool simply expects a file containing <strong>JSON</strong> documents. One can find an example file below:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">{</span><span class="token property" style="color:#9a86fd">"uuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"81050c82-68a5-4130-a56d-a465c8337066"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token string" style="color:#ffcc99">"My MISP Instance"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token property" style="color:#9a86fd">"value"</span><span class="token operator" style="color:#e09142">:</span><span class="token string" style="color:#ffcc99">"why.kunai.rocks"</span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">{</span><span class="token property" style="color:#9a86fd">"uuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"dd19ecd1-8237-427a-9b1d-35ff7d17381f"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token string" style="color:#ffcc99">"My MISP Instance"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token property" style="color:#9a86fd">"value"</span><span class="token operator" style="color:#e09142">:</span><span class="token string" style="color:#ffcc99">"kunai.rocks"</span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The format is simple enough to accommodate any <strong>IoC</strong> feed and is easily scriptable. So one could even imagine the creation of such a file from an IP list found on the Internet.</p><p>Now, the reader should have a good picture of the topic and we can walk through a small experiment to get a bit more familiar with <strong>Kunai</strong> and its <strong>IoC</strong> matching capabilities.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-little-experiment">A Little Experiment<a href="#a-little-experiment" class="hash-link" aria-label="Direct link to A Little Experiment" title="Direct link to A Little Experiment">​</a></h2><p>Let's run <strong>Kunai</strong> without any arguments, merely taking care of redirecting its output:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token function" style="color:#9a86fd">sudo</span><span class="token plain"> kunai </span><span class="token operator" style="color:#e09142">|</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">tee</span><span class="token plain"> /tmp/kunai.log</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token comment" style="color:#6c6783"># if one has jq installed one can pipe kunai output to jq</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token comment" style="color:#6c6783"># in order to get a prettier output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token function" style="color:#9a86fd">sudo</span><span class="token plain"> kunai </span><span class="token operator" style="color:#e09142">|</span><span class="token plain"> jq </span><span class="token string" style="color:#ffcc99">'.'</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">|</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">tee</span><span class="token plain"> /tmp/kunai.log</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You should start seeing some events printed on the terminal. You can try generating some more activity by leaving <strong>Kunai</strong> to run in a corner and use your system as you are used to. You can then stop it using <code>Ctrl + c</code>. </p><p>If you inspect the logs in <code>/tmp/kunai.log</code>, you will most likely find a wealth of useful information, especially if you have security monitoring needs. However, you may also come to the conclusion that there is simply too much useless information for your specific needs. So one can use <a href="/docs/advanced/rule_configuration">filtering / detection rules</a> to be very selective of the events (out of scope for this post) or use <strong>IoC</strong> matching, to only display events matching an <strong>IoC</strong>. So lets do the exact same experiment as previously, but taking a file containing <strong>IoCs</strong> as parameter.</p><p>The first thing you need to do is to copy the following content into a file, let's say <code>/tmp/kunai-iocs.json</code>:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">{</span><span class="token property" style="color:#9a86fd">"uuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"81050c82-68a5-4130-a56d-a465c8337066"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token string" style="color:#ffcc99">"My MISP Instance"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token property" style="color:#9a86fd">"value"</span><span class="token operator" style="color:#e09142">:</span><span class="token string" style="color:#ffcc99">"why.kunai.rocks"</span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">{</span><span class="token property" style="color:#9a86fd">"uuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"dd19ecd1-8237-427a-9b1d-35ff7d17381f"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token string" style="color:#ffcc99">"My MISP Instance"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token property" style="color:#9a86fd">"value"</span><span class="token operator" style="color:#e09142">:</span><span class="token string" style="color:#ffcc99">"kunai.rocks"</span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once this is done, start <strong>Kunai</strong>, passing this <strong>IoC file</strong> in the command line:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token function" style="color:#9a86fd">sudo</span><span class="token plain"> kunai </span><span class="token parameter variable" style="color:#ffcc99">-i</span><span class="token plain"> /tmp/kunai-iocs.json</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And now the magic happens! You won't see logs any longer, but don't worry it is absolutely normal. Under the hood, <strong>Kunai</strong> is analyzing all the events (as the ones you saw in previous experiments) but it will only display the ones matching <strong>IoCs</strong>. So try to generate some network traffic (use <code>dig</code>, <code>curl</code> ...) towards domain <code>why.kunai.rocks</code> and you should see some events popping up on your terminal. If you visit the website with your browser, make sure it <strong>doesn't use DOH</strong> or any <strong>DNS</strong> protocol different from the one running on port <strong>53.</strong></p><p>If you did the experiment and managed to generate an event matching one of the <strong>IoCs</strong> configured, you may have seen that the generated events contains <strong>additional information</strong> about the <strong>matching IoC</strong> in the <code>.detection</code> section of the event.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"data"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"ancestors"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/usr/lib/systemd/systemd|/usr/bin/login|/usr/bin/zsh|/usr/bin/bash|/usr/bin/xinit|/usr/bin/i3|/usr/bin/bash|/usr/bin/urxvt|/usr/bin/zsh"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"command_line"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"dig why.kunai.rocks"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"exe"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"file"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/usr/bin/dig"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"query"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"why.kunai.rocks"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"proto"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"udp"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"response"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"kunai-project.github.io"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"dns_server"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"ip"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"10.96.0.1"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"port"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">53</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"public"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">false</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"is_v6"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"detection"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"iocs"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string" style="color:#ffcc99">"why.kunai.rocks"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">]</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"severity"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"info"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"host"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"..."</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"event"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"kunai"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"id"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">61</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"name"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"dns_query"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"uuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"7cf3a92b-b8fd-9035-4ced-8ca216adbf32"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"batch"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">38</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"task"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"..."</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"parent_task"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"..."</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"utc_time"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"2024-04-18T09:34:31.887637287Z"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In the above example, we see only one <strong>IoC</strong> under the <code>detection</code> section, however if several <strong>IoCs</strong> would match an event, all of them would be in the list. Things should be a bit more concrete for you now, so lets dive into how to automatically ingest <strong>MISP IoCs</strong> into <strong>Kunai</strong>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-misp-iocs-into-kunai">Getting MISP IoCs into Kunai<a href="#getting-misp-iocs-into-kunai" class="hash-link" aria-label="Direct link to Getting MISP IoCs into Kunai" title="Direct link to Getting MISP IoCs into Kunai">​</a></h2><p>The only thing which is missing, in order to configure <strong>Kunai</strong> from a <strong>MISP instance</strong>, is a way to  extract <strong>IoCs</strong> and translate them into the expected format. If you have already played with <a href="https://github.com/MISP/PyMISP" target="_blank" rel="noopener noreferrer">PyMISP</a>, this is not something that should be too scary and if you have not, here is the good news: we have a script which does it for you.  You can find the script in question over at the <a href="https://github.com/kunai-project/tools" target="_blank" rel="noopener noreferrer">Kunai tools repository</a> under the <a href="https://github.com/kunai-project/tools/tree/main/misp" target="_blank" rel="noopener noreferrer">misp</a> directory. </p><p>Before going further, make sure you have all the modules required (check out <a href="https://github.com/kunai-project/tools/blob/main/requirements.txt" target="_blank" rel="noopener noreferrer">requirements.txt</a> at repository root) by Python so that this script works. </p><p>The next step is to create a configuration file for the script, simply rename the example configuration into <code>config.toml</code> and edit it so that it contains the settings to connect to the desired <strong>MISP</strong> instance.</p><p>If you have fulfilled the previous steps, you can simply run the <code>misp-to-kunai.py</code> script and you should see your <strong>MISP's attributes</strong>  translated into <strong>Kunai IoC format</strong> flowing in your terminal. This script has some options to be more selective on the <strong>IoC</strong>s to pull, however we will not go through all of them and will let the reader explore them. The only option we will use is the <code>-o</code> to write <strong>IoC</strong>s into a file. We encourage you to use the <code>-o</code> option to write into a file rather than doing a pure shell redirect as <strong>this option prevents IoC duplication</strong>.</p><p>If you take a look at the output generated by <code>misp-to-kunai.py</code> you may have noticed that <strong>IoCs</strong> are not exactly in the same format as the one described previously. Indeed, those contain an additional field - it being the <code>event_uuid</code> field -, which encodes the <strong>MISP Event UUID</strong> that the <strong>IoC</strong> belongs to. Any additional field to the ones described above, is ignored by <strong>Kunai</strong>, making the <strong>IoC</strong> format fairly flexible. Thanks to this you can add as many fields as you want, for instance to bring contextual information along with the <strong>IoC</strong>. We thought this one would be useful to enrich the <strong>IoC</strong> file with additional context, in case you would wish to correlate back to a <strong>MISP Event</strong>.</p><p>It is now time to put everything together:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token comment" style="color:#6c6783"># pull IoCs from MISP&nbsp;and store them in Kunai IoC format</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">./misp-to-kunai.py </span><span class="token parameter variable" style="color:#ffcc99">-o</span><span class="token plain"> /tmp/kunai-misp-iocs.json</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token comment" style="color:#6c6783"># run Kunai and check all events happening on your</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token comment" style="color:#6c6783"># system against MISP IoCs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token function" style="color:#9a86fd">sudo</span><span class="token plain"> kunai </span><span class="token parameter variable" style="color:#ffcc99">-i</span><span class="token plain"> /tmp/kunai-misp-iocs.json</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As seen in the previous experiment, you should not see any event coming out of <strong>Kunai</strong> until one actually matches an <strong>IoC</strong> you've just loaded. The easiest way to try and see if everything works as expected is to execute a <code>dig</code> command against a domain from the <strong>IoC</strong> list.</p><p>Yes, you went though this entire blog post just to end up typing two simple lines into a shell, but now you understand why you typed those and how all this works.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="final-words">Final Words<a href="#final-words" class="hash-link" aria-label="Direct link to Final Words" title="Direct link to Final Words">​</a></h2><p>This post aimed at being dense and straightforward, mostly to prevent you from giving up. While monitoring an infrastructure, <strong>IoC</strong> checking is mandatory, not to miss "known things". On the other hand, <strong>IoC</strong> do not offer too much flexibility in the sense they cannot be used to detect Tactics, Techniques and Procedures (TTP) used by attackers. So if you would like to go further on this topic, we encourage you to learn <a href="/docs/advanced/rule_configuration">how to configure Kunai with rules</a>.</p><p>On the Python script side, there are also some interesting options deserving exploration, especially if you are interested in turning it into a service.</p><p>All the tools presented here are <strong>open-source</strong>, so feel free to read the code, modify it and contribute to it even in the form of feedback or GitHub issues. This is how we can keep improving our projects and better fit the users' needs.</p><p>We hope you learned useful things or at least that you enjoyed reading this article.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a href="#references" class="hash-link" aria-label="Direct link to References" title="Direct link to References">​</a></h2><p><a href="https://github.com/kunai-project/" target="_blank" rel="noopener noreferrer">Kunai project on GitHub</a><br>
<a href="/docs/quickstart">Kunai documentation</a><br>
<a href="https://github.com/kunai-project/tools" target="_blank" rel="noopener noreferrer">Kunai tools</a><br>
<a href="https://www.misp-project.org/" target="_blank" rel="noopener noreferrer">MISP</a><br>
<a href="https://github.com/MISP/PyMISP" target="_blank" rel="noopener noreferrer">PyMISP</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[BPFDoor case study]]></title>
            <link>https://kunai.rocks/blog/bpf-door-case-study</link>
            <guid>https://kunai.rocks/blog/bpf-door-case-study</guid>
            <pubDate>Thu, 02 Nov 2023 13:37:00 GMT</pubDate>
            <description><![CDATA[This blog post is meant to give an insight of how to use Kunai for detection engineering.]]></description>
            <content:encoded><![CDATA[<p>This blog post is meant to give an insight of how to use Kunai for detection engineering.</p><p>For those who didn't have the opportunity to attend the Kunai workshop at <a href="https://hack.lu" target="_blank" rel="noopener noreferrer">Hack.lu 2023 edition</a> this is a way to catch up on a big part of what we have been doing during this session. For those who actually attended the workshop, you can take a read anyway because the post goes even more into the details, as we were limited in time.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="about-the-sample-studied-in-this-post">About the Sample Studied in this Post<a href="#about-the-sample-studied-in-this-post" class="hash-link" aria-label="Direct link to About the Sample Studied in this Post" title="Direct link to About the Sample Studied in this Post">​</a></h2><p><strong>BPFDoor</strong> has been chosen for this case study as it has been described, when it got discovered, as something not trivial to detect. The difficulties to detect mostly being depicted as the fact that it uses BPF based packet filtering to implement a nice backdoor. I will not deep dive in the description of what this malware is doing and how it works. If you want to know more about those topics, please find a non-exhaustive list of related posts and documents about BPFDoor malware in <a href="#about-bpfdoor">references section</a>.</p><table><tbody><tr><td><b>Filename</b></td><td>bpfdoor.mwr</td></tr><tr><td><b>md5</b></td><td>0017f7b913ce66e4d80f7e78cf830a2b</td></tr><tr><td><b>sha1</b></td><td>f1bf775746a5c882b9ec003617b2a70cf5a5b029</td></tr><tr><td><b>sha256</b></td><td>fa0defdabd9fd43fe2ef1ec33574ea1af1290bd3d763fdb2bed443f2bd996d73</td></tr><tr><td><b>sha512</b></td><td>ff5dd28ba3f5ce1f85f85fa9b65f9f30fbd300f2ca238cb2713da7077b7a0a8ff094cff4d7de9381726925abdd9ea065fa75ccd02fa5a816b71a6f91479363c1</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="experiment-description">Experiment Description<a href="#experiment-description" class="hash-link" aria-label="Direct link to Experiment Description" title="Direct link to Experiment Description">​</a></h2><p>You can find here after the methodology followed in order to make our experiment. This methodology is not specific to this sample, so it can be used to study any malware you want with <strong>Kunai</strong>.</p><ol><li>Run <strong>Kunai</strong> in such a way you capture the output (redirect output to file or configure output file)</li><li>Run malware</li><li>Interact with the malware if needed/possible</li></ol><p>For the sake of simplicity, I&nbsp;have prepared everything for you. You can find the Kunai's output for this sample in the following file <a target="_blank" href="/assets/files/bpfdoor-e85e848ecc643661710a0f843ab98b5e.jsonl">bpfdoor.jsonl</a>. To improve the readability of that file, it went through a step of filtering so that it contains only the events related to the sample.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>re-doing the experiments yourself</div><div class="admonitionContent_S0QG"><p>It is possible, but you have to known that the events in the file got generated with the latest git (under development) version of <strong>Kunai</strong>. Therefore, some events will be missing if you take the latest release (i.e. <strong>0.1.0</strong>).</p></div></div><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>running BPFDoor</div><div class="admonitionContent_S0QG"><ul><li>run the sample as priviledged user otherwise it won't work</li><li>the malware checks if an instance already running (you can know that by inspecting the source code or <strong>stracing</strong> the process)</li></ul></div></div><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>running malware must be done with care</div><div class="admonitionContent_S0QG"><ul><li>always do it in a dedicated machine (i.e. VM), preferably <strong>isolated</strong> from the Internet</li><li>Linux container isolation is not enough (the kernel is shared between host and containers)</li><li>it is always better to know a bit what to expect from the sample (i.e. make sure it does not exploit your hypervisor)</li></ul></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-suspicious-events">The Suspicious Events<a href="#the-suspicious-events" class="hash-link" aria-label="Direct link to The Suspicious Events" title="Direct link to The Suspicious Events">​</a></h2><p>The aim of this analysis is not necessarily to understand exactly what the malware is doing, as it can be achieved by other means (sandboxing, strace ...). The goal is to identify actionable events, on which we can build efficient detection rules. </p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>suspicious events</div><div class="admonitionContent_S0QG"><p>The notion of a suspicious event is sometimes universal, sometimes subjective and sometimes depends on the context. So you might find more/less events suspicious than me while you look at the logs. Anyway any detection rule built on top of those events should be tested before being put into production.</p></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-story-of-a-weird-command-line">The Story of a Weird Command Line<a href="#the-story-of-a-weird-command-line" class="hash-link" aria-label="Direct link to The Story of a Weird Command Line" title="Direct link to The Story of a Weird Command Line">​</a></h3><p>The first event which should really catch our attention is the following. We see that a binary <code>/tmp/bpfdoor.mwr</code>, which should be qualified as unknown in a real infection, runs a rather suspicious one-liner command line.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"data"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"ancestors"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/usr/lib/systemd/systemd|/usr/sbin/sshd|/usr/sbin/sshd|/usr/sbin/sshd|/usr/bin/bash|/usr/bin/sudo|/usr/bin/su|/usr/bin/bash|/tmp/bpfdoor.mwr"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"parent_exe"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/tmp/bpfdoor.mwr"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"command_line"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"sh -c /bin/rm -f /dev/shm/kdmtmpflush;/bin/cp ./bpfdoor.mwr /dev/shm/kdmtmpflush &amp;&amp; /bin/chmod 755 /dev/shm/kdmtmpflush &amp;&amp; /dev/shm/kdmtmpflush --init &amp;&amp; /bin/rm -f /dev/shm/kdmtmpflush"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"exe"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"file"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/usr/bin/dash"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"md5"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"1e6b1c887c59a315edb7eb9a315fc84c"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha1"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"803ffdb71aa236aa25009bef97db1b8ad0e3c62b"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha256"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"64e48365207d0c19008ba7d53d75c0de3fcd5a1590e4c40fc69c677663fedc20"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha512"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0d261d7a8d615d080e20f1e1b294f168107dc2740da1a037d9519215e67e7a72dcc0f56c0006e5fdc04b7dbbd339171e9d2bf15f8e31f295d37aff499e1bc928"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"size"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">129816</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"info"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"event"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"kunai"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"id"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"name"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"execve"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"uuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"8f2fab25-ef70-3898-b52e-da2eaca820cc"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"batch"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">27</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We clearly understand from this command line that the sample is copying itself to <code>/dev/shm</code> with a new name, changes its permissions, executes the new file and deletes it straight after. What else do we need to trigger the alarm ? This is already a good start, so lets extract some ideas out of this and continue our journey.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>/dev/shm</div><div class="admonitionContent_S0QG"><p>This is usually a <strong>tmpfs</strong> (in memory) filesystem so files running from that place will not persist on disk. Copying itself there, before executing and deleting itself could be seen as an attempt to evade malware cleaning run by an AV or any protection software.</p></div></div><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>detection takeaways</div><div class="admonitionContent_S0QG"><ul><li>a command line with <code>cp</code>, <code>chmod</code>, <code>exec</code>, <code>rm</code> happening in this order might be considered as a suspicious one-liner<ul><li>increase severity if <code>ancestors</code> contains a binary of a service exposed on the Internet</li><li>increase severity if <code>command_line</code> contains <code>/dev/shm</code></li></ul></li></ul></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="not-leaving-traces-is-suspicious">Not Leaving Traces is Suspicious<a href="#not-leaving-traces-is-suspicious" class="hash-link" aria-label="Direct link to Not Leaving Traces is Suspicious" title="Direct link to Not Leaving Traces is Suspicious">​</a></h3><p>The next event looking suspicious is the following and is strongly linked to the previous one. As it is the execution of the malware after it copied itself into <code>/dev/shm</code>.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"data"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"ancestors"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/usr/lib/systemd/systemd|/usr/sbin/sshd|/usr/sbin/sshd|/usr/sbin/sshd|/usr/bin/bash|/usr/bin/sudo|/usr/bin/su|/usr/bin/bash|/tmp/bpfdoor.mwr|/usr/bin/dash"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"parent_exe"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/usr/bin/dash"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"command_line"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/dev/shm/kdmtmpflush --init"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"exe"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"file"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/dev/shm/kdmtmpflush"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"md5"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">""</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha1"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">""</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha256"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">""</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha512"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">""</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"size"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">0</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"error"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"file not found"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"info"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"event"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"kunai"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"id"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"name"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"execve"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"uuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"38789315-0485-9af9-f511-27fe97b21a1c"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"batch"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">43</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>What makes that event suspicious is that <strong>Kunai</strong>, did not managed to compute hashing information out of the executable path. The reason for this is simple, and the event is self explanatory, the <strong>file is not found</strong>. As we have seen previously the malware deletes the file straight after the execution. This type of things (quickly modifying a file) after its execution races <strong>Kunai</strong>, and this is sad. I will not go into the technical details but this is not really something we can change. However, the important thing is that when such thing happens <strong>Kunai</strong> tells it to you. So even if some information is missing from that event, we can still use it as a reliable source of suspiciousness.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>detection takeaways</div><div class="admonitionContent_S0QG"><ul><li>a binary for which we could not compute hashing information is suspicious, it means the file got modified/deleted straight after its execution</li><li>a binary running from <code>/dev/shm</code> with priviledged user</li><li>a known bad hash (not directly applicable to this event but to any event containing hashing information)</li></ul></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="changing-its-own-task-name">Changing its own Task Name<a href="#changing-its-own-task-name" class="hash-link" aria-label="Direct link to Changing its own Task Name" title="Direct link to Changing its own Task Name">​</a></h3><p>The next suspicious candidate is the malware changing its task name. It does it using the <code>prctl</code> syscall, passing the <code>PR_SET_NAME</code> option as a first argument.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"data"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"exe"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/dev/shm/kdmtmpflush"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"command_line"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/dev/shm/kdmtmpflush --init"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"option"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"PR_SET_NAME"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"arg2"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0x605368"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"arg3"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0x0"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"arg4"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0x6e75722d646c6168"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"arg5"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0x3"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"success"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"info"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"event"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"kunai"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"id"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">7</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"name"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"prctl"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"uuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"c8be60da-fa83-4a6c-aa8a-cbf1d38f8520"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"batch"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">45</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"task"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"name"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"hald-runner"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token comment" style="color:#6c6783">// this is the new task name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"pid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1747</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"tgid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1747</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"guuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"7d64f958-4500-0000-82bb-77d6d3060000"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"uid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">0</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"gid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">0</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"namespaces"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token property" style="color:#9a86fd">"mnt"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">4026531840</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"flags"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0x00400000"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Changing task name cannot be considered as suspicious per se, you would probably see a lot of processes cloning/forking, changing their task names. So we have to use a bit more the data of this event to identify whether it is suspicious or not. We can observe two suspicious things though:</p><ul><li>our good old <code>/dev/shm</code> friend being in executable path</li><li><code>hald-runner</code> being used as a new task name, this is clearly an attempt to mimic a legit process/service task name in order to fool people looking at running processes</li></ul><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>detection takeaways</div><div class="admonitionContent_S0QG"><ul><li>a binary located in <code>/dev/shm</code> changing its task name should raise an alert</li><li>a task name being changed to mimic a legit binary</li><li>it might be interesting to tag unknown (non whitelisted) binaries doing this and understand why they do so</li></ul></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="attaching-bpf-filter-on-a-raw-socket--bonus">Attaching BPF Filter on a Raw Socket + Bonus<a href="#attaching-bpf-filter-on-a-raw-socket--bonus" class="hash-link" aria-label="Direct link to Attaching BPF Filter on a Raw Socket + Bonus" title="Direct link to Attaching BPF Filter on a Raw Socket + Bonus">​</a></h3><p>Finally, the one we all expected and which gave its name to that malware ! We see that the executable is attaching a BPF&nbsp;filter to a raw socket <code>SOCK_RAW</code>.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"data"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"command_line"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"hald-runner"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"exe"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/dev/shm/kdmtmpflush"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"socket"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"domain"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"AF_PACKET"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"type"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"SOCK_RAW"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"filter"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"md5"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"19c9f9f52a7d7bf1f9c26dc57034873b"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha1"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"c97c5ad700f7426432dbe4d6478f362714e835f0"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha256"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"1a23f76646d1741946afd2d6d3ce3d0deae14198b544b09322a540c345953988"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"sha512"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"af9fce79e05316999ae3ef82ea7a04ce299c611cb46e27154e455b9f9bea42631a5293dd42cb0d332d5e10b8ed924930321cb3433b7989e6fe9042d97338d477"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"len"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">30</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"size"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">240</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"attached"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"info"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"event"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"kunai"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"id"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">22</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"name"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"bpf_socket_filter"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"uuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"839aa10e-243a-3238-b221-9f7d0c1cac95"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"batch"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">51</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"task"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"name"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"hald-runner"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"pid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1748</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"tgid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1748</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"guuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"ff313459-4500-0000-82bb-77d6d4060000"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"uid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">0</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"gid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">0</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"namespaces"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token property" style="color:#9a86fd">"mnt"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">4026531840</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"flags"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0x00400140"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"parent_task"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"name"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"systemd"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token comment" style="color:#6c6783">// this is init on this system</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"pid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"tgid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"guuid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"4b0dc405-0000-0000-82bb-77d601000000"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"uid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">0</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"gid"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">0</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"namespaces"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token property" style="color:#9a86fd">"mnt"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">4026531840</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"flags"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0x00400100"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"utc_time"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"2023-09-05T09:33:07.600987330Z"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Attaching a BPF&nbsp;filter to a raw socket is definitely something suspicious ! But another thing interesting can be observed in this event. Our malware has suddently <code>systemd</code> as <code>parent_task</code>, while previously it was itself <code>hald-runner</code> (you have to look at the logs to verify that). So what the hell, happened ?</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>zombie process</div><div class="admonitionContent_S0QG"><p>A zombie process, is a process still running while it's parent is dead. When that happens the Linux Kernel makes the <code>init</code> process become the parent of the zombie process. Becoming a zombie is not something usually done on purpose as it is often the symptom of a bug. But if you are a malware you might use that trick to make people think your parent process is <code>init</code> binary (systemd in my case) and that you are a legitimate service.</p></div></div><p>So this zombie process information is definitely something we can use to detect something strange is going on. In the log file, this event is the only one you will see with <code>systemd</code> as parent. This is because after that event the malware listen up for packets arriving on the raw socket. But don't worry, I&nbsp;can guarantee that any subsequent activity of this malware would have exactly the same anomaly and would give you even more opportunities to catch it.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>detection takeaways</div><div class="admonitionContent_S0QG"><ul><li>a binary attaching a BPF&nbsp;filter to a <code>SOCK_RAW</code></li><li>a binary attaching a BPF&nbsp;filter to a socket<ul><li>increase severity if running in <code>/dev/shm</code></li><li>increase severity if task name changed<ul><li>increase severity if mimics a legit service</li></ul></li></ul></li><li>any zombie process (parent_task became init pid=1)<ul><li>increase severity if running in <code>/dev/shm</code> or unknown service binary</li></ul></li></ul></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="going-further-for-even-more-detection-possibilities">Going Further, for Even More Detection Possibilities<a href="#going-further-for-even-more-detection-possibilities" class="hash-link" aria-label="Direct link to Going Further, for Even More Detection Possibilities" title="Direct link to Going Further, for Even More Detection Possibilities">​</a></h3><p>If you looked at the logs, you have probably noticed that the <a href="#attaching-bpf-filter-on-a-raw-socket--bonus">previous event</a> we described is one of the last interesting things we see. Afer, everything looks to cleanup events. This is not all with this malware at all, as you may have also observed that the task with pid 1748 didn't exit.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain">root@ebpf-ubuntu-20:/tmp# ps aux | grep 1748</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">root        1748  0.0  0.0   2496    84 ?        Ss   Sep05   0:00 hald-runner</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is the task listening on the raw socket and waiting for commands. So the malware is still running and all we have analyzed so far are only the events generated when the malware is spawned on a system, we did not interact with the malware whatsoever. This is because I&nbsp;did not take the time to reverse-engineer the sample to know the password it expects when it receives packets on its raw socket. </p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>homework</div><div class="admonitionContent_S0QG"><ul><li>reverse the sample, find the key and send expected packets to the sample</li><li>compile the malware from <a href="https://github.com/gwillgues/BPFDoor/blob/main/bpfdoor.c" target="_blank" rel="noopener noreferrer">sources</a> (not guaranteed of being the exact same one) with a key you know and send packets to the sample</li></ul></div></div><p>What we can see from the <a href="https://github.com/gwillgues/BPFDoor/blob/main/bpfdoor.c" target="_blank" rel="noopener noreferrer">BPFDoor sources</a>, is that we can expect even more detection possibilities:</p><ul><li>the sample runs specific <code>iptables</code> commands</li><li>it again changes task name, to <code>/usr/libexec/postfix/master</code></li><li>it can execute abitrary commands and very likely suspicious ones, which should not be ran from anything else than an interactive shell (<code>whoami</code>, <code>cat</code> ...). Programmers usually prefer using APIs rather than parsing shell outputs.</li><li>we would see a binary located in <code>/dev/shm</code> communicating over the network</li></ul><p>Another blind spot we have in this analysis is the original infection vector. I may have missed it but I&nbsp;didn't find this information online either. Anyway, what is important here is that knowing the infection vector would have been very likely an additional way to catch this sample. This is purely fictional but if we assume it went through a web server compromise, we would have seen at some point a <code>/dev/shm/kdmtmpflush</code> <a href="/docs/events/execve">execve event</a> with a web server binary being in it's <code>ancestors</code> field.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>detection takeaways</div><div class="admonitionContent_S0QG"><ul><li>something executed from <code>/dev/shm</code> running commands<ul><li>increase severity if running commands such as <code>iptables</code>, <code>whoami</code>, <code>cat</code></li></ul></li><li>a binary using a shell to execute commands (might need some whitelisting)</li><li>something running in <code>/dev/shm</code> communicating over the Internet</li><li>any service that has an exposed port on the Internet executing an unexpected binary</li></ul></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="bonus-detecting-the-mistakes-made-by-bpfdoor-authors">Bonus: Detecting the Mistakes made by BPFDoor Authors<a href="#bonus-detecting-the-mistakes-made-by-bpfdoor-authors" class="hash-link" aria-label="Direct link to Bonus: Detecting the Mistakes made by BPFDoor Authors" title="Direct link to Bonus: Detecting the Mistakes made by BPFDoor Authors">​</a></h3><p>Something I&nbsp;observed while running several times this BPFDoor sample is that it sometimes renames its task with something containing <code>/</code> (the Linux path separator). Such an example can be observed below. </p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"data"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"exe"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/dev/shm/kdmtmpflush"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"command_line"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/dev/shm/kdmtmpflush --init"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"option"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"PR_SET_NAME"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"arg2"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0x605368"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"arg3"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0x0"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"arg4"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0x8"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"arg5"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"0x3"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"success"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token property" style="color:#9a86fd">"info"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"event"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token property" style="color:#9a86fd">"id"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">7</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token property" style="color:#9a86fd">"name"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"prctl"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token property" style="color:#9a86fd">"task"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token comment" style="color:#6c6783">// new task name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token property" style="color:#9a86fd">"name"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/usr/sbin/conso"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is even more obvious when looking at the <a href="https://github.com/gwillgues/BPFDoor/blob/main/bpfdoor.c" target="_blank" rel="noopener noreferrer">malware source code</a>, the name of the process is changed by randomly picking an entry in the following array.</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token keyword" style="color:#ffcc99">char</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">*</span><span class="token plain">self</span><span class="token punctuation" style="color:#6c6783">[</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token string" style="color:#ffcc99">"/sbin/udevd -d"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token string" style="color:#ffcc99">"/sbin/mingetty /dev/tty7"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token string" style="color:#ffcc99">"/usr/sbin/console-kit-daemon --no-daemon"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token string" style="color:#ffcc99">"hald-addon-acpi: listening on acpi kernel interface /proc/acpi/event"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token string" style="color:#ffcc99">"dbus-daemon --system"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token string" style="color:#ffcc99">"hald-runner"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token string" style="color:#ffcc99">"pickup -l -t fifo -u"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token string" style="color:#ffcc99">"avahi-daemon: chroot helper"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token string" style="color:#ffcc99">"/sbin/auditd -n"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token string" style="color:#ffcc99">"/usr/lib/systemd/systemd-journald"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This caught my attention because this is not something you see very often in Linux and luckily for us there is a good explaination for that. The Linux Kernel, when performing execve it calls <a href="https://elixir.bootlin.com/linux/latest/C/ident/begin_new_exec" target="_blank" rel="noopener noreferrer">begin_new_exec</a>, itself calling <a href="https://elixir.bootlin.com/linux/latest/source/fs/exec.c#L1366" target="_blank" rel="noopener noreferrer">__set_task_comm(me, kbasename(bprm-&gt;filename), true)</a>. What it does is simple, <code>__set_task_comm</code> assigns the new task name with <code>kbasename(some_filename)</code>. And guess what, <a href="https://elixir.bootlin.com/linux/latest/C/ident/kbasename" target="_blank" rel="noopener noreferrer">kbasename</a> is actually taking the <a href="https://en.wikipedia.org/wiki/Basename" target="_blank" rel="noopener noreferrer">basename</a> out of a path.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>task name is always <strong>16 bytes</strong> so any longer string is truncated. This is why in our event we see task name <code>/usr/sbin/conso</code>instead of <code>/usr/sbin/console-kit-daemon --no-daemon</code></p></div></div><p>All this to say that it should not be considered as normal to have a task name containing <code>/</code>. The <code>PR_SET_NAME</code> option of the prctl syscall is meant to change the task name. By convention (this is not enforced) task names does not contain any <code>/</code>. So it is not really a mis-use of the <code>prctl</code> syscall the malware authors did but they rather forgot/didn't know that Linux task name are not supposed to contain <code>/</code>. This anomaly could be used to detect such a bad programming practice, that I hope is seen only in malware !</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>detection takeaways</div><div class="admonitionContent_S0QG"><ul><li>a task name containing <code>/</code> is abnormal (programming mistake)</li><li>a task name not contained in the <code>exe</code> filename is suspicious for unknown binary. Some whitelisting would be needed as threaded programs often rename their threads with custom names.</li></ul></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2><p>Assuming we have Kunai running on our machine, would it be complicated to detect this kind of sample knowing what we know now ? I would say no as there are enough suspicious things we can rely on and which should not trigger that many false positives.</p><p>This is always easy to say that we can detect things a posteriori. In order to have a chance to catch such sample in the wild, relevant generic rules and eventually heuristics need to be built. This is why it is very important to make as much as possible this kind of exercise as it would help us filling the gaps in detection rules. Sorry for all the guys who think they are protected because they bought an expensive commercial solution but you'd have to do this kind of work too, especially if you are a valuable target to attackers. I will not argue for hours about this but the main argument is that commercial solution are not bad per se, but they have to be generic enough to satisfy the more use cases as possible. Satisfying use cases is usually synonym of not having too many false positives, at the cost of discarding some true positives under some very specific/targetted environment. So if you have a commercial solution, do this job and enrich your detection rules, it won't be lost and you will probably make one of your engineers happy to use his brain.</p><p>In the reports, everyone tends to agree on one thing: this kind of malware is difficult to detect. Is it a question of stealthiness of the malware ? I&nbsp;don't think so, because we have seen it does a lot of very suspicious things, and we can expect many others (we did not interact with the shell). I rather think the issue is the lack of visibility most of the people have, at least those who cannot afford an EDR. So according to this absolutely impartial argument, it gives you a very good reason to use <strong>Kunai</strong>.</p><p>Happy Threat Detection and Hunting</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a href="#references" class="hash-link" aria-label="Direct link to References" title="Direct link to References">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="about-bpfdoor">About BPFDoor<a href="#about-bpfdoor" class="hash-link" aria-label="Direct link to About BPFDoor" title="Direct link to About BPFDoor">​</a></h3><ul><li><a href="https://github.com/gwillgues/BPFDoor/blob/main/bpfdoor.c" target="_blank" rel="noopener noreferrer">Source code (probably not exactly the same one)</a></li><li><a href="https://www.countercraftsec.com/blog/a-step-by-step-bpfdoor-compromise/" target="_blank" rel="noopener noreferrer">https://www.countercraftsec.com/blog/a-step-by-step-bpfdoor-compromise/</a></li><li><a href="https://exatrack.com/public/Tricephalic_Hellkeeper.pdf" target="_blank" rel="noopener noreferrer">https://exatrack.com/public/Tricephalic_Hellkeeper.pdf</a></li><li><a href="https://www.trendmicro.com/en_us/research/23/g/detecting-bpfdoor-backdoor-variants-abusing-bpf-filters.html" target="_blank" rel="noopener noreferrer">https://www.trendmicro.com/en_us/research/23/g/detecting-bpfdoor-backdoor-variants-abusing-bpf-filters.html</a></li></ul>]]></content:encoded>
            <category>malware</category>
            <category>detection-engineering</category>
        </item>
        <item>
            <title><![CDATA[Announcing Kunai]]></title>
            <link>https://kunai.rocks/blog/announcing-kunai</link>
            <guid>https://kunai.rocks/blog/announcing-kunai</guid>
            <pubDate>Fri, 23 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Why Kunai]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-kunai">Why Kunai<a href="#why-kunai" class="hash-link" aria-label="Direct link to Why Kunai" title="Direct link to Why Kunai">​</a></h2><p>Because you guys are ninjas !</p>]]></content:encoded>
            <category>announcement</category>
        </item>
    </channel>
</rss>