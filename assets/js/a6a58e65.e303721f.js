"use strict";(self.webpackChunkkunai_doc=self.webpackChunkkunai_doc||[]).push([[310],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(t),f=a,m=u["".concat(l,".").concat(f)]||u[f]||p[f]||i;return t?r.createElement(m,o(o({ref:n},d),{},{components:t})):r.createElement(m,o({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4169:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={sidebar_position:81},o="Read",s={unversionedId:"events/read",id:"events/read",title:"Read",description:"This event gets generated whenever a file is read.",source:"@site/docs/events/read.md",sourceDirName:"events",slug:"/events/read",permalink:"/docs/events/read",draft:!1,editUrl:"https://github.com/kunai-project/kunai-doc/tree/main/docs/events/read.md",tags:[],version:"current",sidebarPosition:81,frontMatter:{sidebar_position:81},sidebar:"tutorialSidebar",previous:{title:"Send data",permalink:"/docs/events/send_data"},next:{title:"Read config",permalink:"/docs/events/read_config"}},l={},c=[],d={toc:c},u="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"read"},"Read"),(0,a.kt)("p",null,"This event gets generated whenever a file is read."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"If consecutive ",(0,a.kt)("inlineCode",{parentName:"li"},"read")," operations are made on the same file, only one event will be generated for a given task."),(0,a.kt)("li",{parentName:"ul"},"Events gets generated on ",(0,a.kt)("inlineCode",{parentName:"li"},"read")," variant syscalls. It means a file just being opened with ",(0,a.kt)("inlineCode",{parentName:"li"},"open")," kind of syscalls won't generate any event until being actually read."))),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"If you decide to enable these events (disabled by default), you must be aware that they are going to be a lot. Please make sure you have read the ",(0,a.kt)("a",{parentName:"p",href:"/docs/configuration"},"configuration section"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "ancestors": "/usr/lib/systemd/systemd|/usr/bin/login|/usr/bin/zsh|/usr/bin/bash|/usr/bin/xinit|/usr/bin/i3|/usr/bin/bash|/usr/bin/urxvt|/usr/bin/zsh|/usr/bin/zsh",\n    "command_line": "git diff --no-ext-diff --ignore-submodules=dirty --quiet --exit-code",\n    "exe": {\n      "file": "/usr/bin/git"\n    },\n    "path": "/usr/lib/libz.so.1.3.1"\n  },\n  "info": {\n    "host": "...",\n    "event": {\n      "source": "kunai",\n      "id": 81,\n      "name": "read",\n      "uuid": "902d47f1-dd0b-0313-582b-2083ba0fee1c",\n      "batch": 65\n    },\n    "task": "...",\n    "parent_task": "...",\n    "utc_time": "2024-02-12T21:58:22.097038200Z"\n  }\n}\n')))}p.isMDXComponent=!0}}]);